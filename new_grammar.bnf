[0] _empty         ::= 
[]  rook_pl        ::= statement _rook_pl_1
[]  _rook_pl_1     ::= _empty | _rook_pl_2
[]  _rook_pl_2     ::= statement _rook_pl_1
[]  statement      ::= _statement_1 NEWLINE
[]  _statement_1   ::= simple_stmt | compound_stmt
[]  simple_stmt    ::= dec_state | ass_state | in_state | out_state
[]  compound_stmt  ::= cond_state | iter_state | func_state
[]  identifier     ::= alpha _identifier_1 _identifier_2
[]  _identifier_1  ::= _empty | _identifier_3
[]  _identifier_3  ::= alphanumeric _identifier_1
[]  _identifier_2  ::= _empty | _identifier_4
[]  _identifier_4  ::= _identifier_5 alphanumeric
[]  _identifier_5  ::= _empty | _identifier_7
[]  _identifier_7  ::= _identifier_6 _identifier_5
[]  _identifier_6  ::= '_' | alphanumeric
[]  all_char       ::= alphanumeric | symbols
[]  string         ::= '"' _string_1 '"'
[]  _string_1      ::= _empty | _string_2
[]  _string_2      ::= all_char _string_1
[]  alphanumeric   ::= alpha | digit
[]  number         ::= int _number_1
[]  _number_1      ::= _empty | _number_2
[]  _number_2      ::= '.' _number_3
[]  _number_3      ::= digit _number_4
[]  _number_4      ::= _empty | _number_5
[]  _number_5      ::= digit _number_4
[]  int            ::= '0' | _int_1
[]  _int_1         ::= non_zero _int_2
[]  _int_2         ::= _empty | _int_3
[]  _int_3         ::= digit _int_2
[]  array          ::= '[' _array_1 ']'
[]  _array_1       ::= _empty | array_value
[]  array_value    ::= value_list | _array_value_1
[]  _array_value_1 ::= int 'to' int _array_value_2
[]  _array_value_2 ::= _empty | _array_value_3
[]  _array_value_3 ::= 'step' ':' int
[]  value          ::= identifier
                     | number
                     | string
                     | bool_literals
                     | array
                     | _value_1
[]  _value_1       ::= '(' expr ')'
[]  expr           ::= value _expr_1
[]  _expr_1        ::= _empty | _expr_3
[]  _expr_3        ::= _expr_2 _expr_1
[]  _expr_2        ::= arith_op value
[]  iden_list      ::= identifier _iden_list_1
[]  _iden_list_1   ::= _empty | _iden_list_3
[]  _iden_list_3   ::= _iden_list_2 _iden_list_1
[]  _iden_list_2   ::= ',' identifier
[]  value_list     ::= value _value_list_1
[]  _value_list_1  ::= _empty | _value_list_3
[]  _value_list_3  ::= _value_list_2 _value_list_1
[]  _value_list_2  ::= ',' value
[]  dec_state      ::= iden_list '=' value_list
[]  ass_state      ::= identifier ass_op value
[]  in_state       ::= identifier '=' 'input' '(' _in_state_1 ')'
[]  _in_state_1    ::= _empty | string
[]  out_state      ::= 'print' '(' _out_state_1 _out_state_2 ')'
[]  _out_state_1   ::= _empty | value_list
[]  _out_state_2   ::= _empty | _out_state_3
[]  _out_state_3   ::= ',' out_arg
[]  out_arg        ::= 'separator' '=' _out_arg_1
[]  _out_arg_1     ::= #x20 | symbols
[]  cond_state     ::= _cond_state_1 | which_st
[]  _cond_state_1  ::= if_st _cond_state_2 _cond_state_3
[]  _cond_state_2  ::= _empty | _cond_state_4
[]  _cond_state_4  ::= elif_st _cond_state_2
[]  _cond_state_3  ::= _empty | else_st
[]  if_st          ::= 'if' condition ':' block
[]  elif_st        ::= 'elif' condition ':' block
[]  else_st        ::= 'else' ':' block
[]  which_st       ::= 'which' identifier ':' ins_block
[]  condition      ::= value _condition_1
[]  _condition_1   ::= _empty | _condition_2
[]  _condition_2   ::= rel_op value
[]  ins_block      ::= NEWLINE INDENT _ins_block_1 DEDENT
[]  _ins_block_1   ::= ins_part _ins_block_2
[]  _ins_block_2   ::= _empty | _ins_block_3
[]  _ins_block_3   ::= ins_part _ins_block_2
[]  ins_part       ::= 'instance' _ins_part_1 value ':' block
[]  _ins_part_1    ::= [rel_op]
[]  block          ::= NEWLINE INDENT _block_1 DEDENT
[]  _block_1       ::= statement _block_2
[]  _block_2       ::= _empty | _block_3
[]  _block_3       ::= statement _block_2
[]  iter_state     ::= while_loop | for_loop
[]  while_loop     ::= 'while' condition ':' block
[]  for_loop       ::= 'for' var _for_loop_1 'in' array ':' block
[]  _for_loop_1    ::= _empty | _for_loop_2
[]  _for_loop_2    ::= ',' var
[]  func_state     ::= 'define' identifier '(' _func_state_1 ')' ':' block
[]  _func_state_1  ::= _empty | params
[]  params         ::= param _params_1
[]  _params_1      ::= _empty | _params_3
[]  _params_3      ::= _params_2 _params_1
[]  _params_2      ::= ',' param
[]  param          ::= identifier _param_1
[]  _param_1       ::= _empty | _param_2
[]  _param_2       ::= '=' value

@terminals       

[]  NEWLINE        ::= '\n'
[]  INDENT         ::= "indent"
[]  DEDENT         ::= "dedent"
[]  alpha          ::= 'A'
                     | 'B'
                     | 'C'
                     | 'D'
                     | 'E'
                     | 'F'
                     | 'G'
                     | 'H'
                     | 'I'
                     | 'J'
                     | 'K'
                     | 'L'
                     | 'M'
                     | 'N'
                     | 'O'
                     | 'P'
                     | 'Q'
                     | 'R'
                     | 'S'
                     | 'T'
                     | 'U'
                     | 'V'
                     | 'W'
                     | 'X'
                     | 'Y'
                     | 'Z'
                     | 'a'
                     | 'b'
                     | 'c'
                     | 'd'
                     | 'e'
                     | 'f'
                     | 'g'
                     | 'h'
                     | 'i'
                     | 'j'
                     | 'k'
                     | 'l'
                     | 'm'
                     | 'n'
                     | 'o'
                     | 'p'
                     | 'q'
                     | 'r'
                     | 's'
                     | 't'
                     | 'u'
                     | 'v'
                     | 'w'
                     | 'x'
                     | 'y'
                     | 'z'
[]  bool_literals  ::= 'true' | 'false'
[]  logic_op       ::= 'and' | 'or' | 'not'
[]  unary          ::= '+' | '-'
[]  arith_op       ::= '+' | '-' | '*' | '/' | '%'
[]  ass_op         ::= '=' | '+=' | '-=' | '*=' | '/='
[]  rel_op         ::= '<' | '>' | '==' | '!=' | '>=' | '<='
[]  symbols        ::= '_'
                     | '+'
                     | '-'
                     | '*'
                     | '/'
                     | '%'
                     | '='
                     | '<'
                     | '>'
                     | '['
                     | ']'
                     | '.'
                     | '{'
                     | '}'
                     | '('
                     | ')'
                     | '&'
                     | '^'
                     | '#'
                     | '@'
                     | "!"
                     | '`'
                     | '~'
                     | '|'
                     | "'"
                     | '\'
                     | ':'
                     | ';'
                     | ','
                     | #x20
[]  non_zero       ::= '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'
[]  digit          ::= '0' | non_zero
